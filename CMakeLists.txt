#
# DO NOT MODIFY THIS SCRIPT - IT IS AUTOGENERATED
# ===============================================
# If there is a problem, either 'fix' fgx.pro,
# or modify the Qt2cmake.pl script accordingly.
# CMakeLists.txt, generated from [F:\FG\18\fgx\src\fgx.pro]

cmake_minimum_required( VERSION 2.6 )

# Added for DEBUG only
IF(UNIX)
  IF(APPLE)
    SET(GUI "Cocoa")
  ELSE(APPLE)
    SET(GUI "X11")
  ENDIF(APPLE)
ELSE(UNIX)
  IF(WIN32)
    SET(GUI "Win32")
  ELSE(WIN32)
    SET(GUI "Unknown")
  ENDIF(WIN32)
ENDIF(UNIX)
MESSAGE("*** GUI system is ${GUI} ***")

project( fgx )

file(READ version versionFile)
string(STRIP ${versionFile} FGX_VERSION)

# to distinguish between debug and release lib
set( CMAKE_DEBUG_POSTFIX d )

# Add LINUX or WINDOWS definitions
if(UNIX)
   add_definitions( -DLINUX )
else(UNIX)
   add_definitions( -DWINDOWS )
endif(UNIX)
# QT = network xml xmlpatterns webkit
# CONFIG = qt thread
message(STATUS "*** Finding Qt4 components ${compponents}")
find_package ( Qt4 COMPONENTS QtCore QtGui QtNetwork QtWebkit QtXml QtXmlPatterns REQUIRED )
include ( ${QT_USE_FILE} )
add_definitions( ${QT_DEFINITIONS} )
# debug messages
message(STATUS "*** include ( ${QT_USE_FILE} )")
message(STATUS "*** add_definitions( ${QT_DEFINITIONS} )")

set( QT_USE_QTNETWORK TRUE )
set( QT_USE_QTXML TRUE )
set( QT_USE_QTXMLPATTERNS TRUE )
set( QT_USE_QTWEBKIT TRUE )


set( fgx_SRCS src/main.cpp src/xobjects/xsettings.cpp src/settings/settingsdialog.cpp src/network/networkwidget.cpp
    src/network/mptelnet.cpp src/aircraft/aircraftwidget.cpp src/airports/airportswidget.cpp
    src/xwidgets/execontrols.cpp src/panes/timeweatherwidget.cpp src/panes/renderingwidget.cpp
    src/panes/coresettingswidget.cpp src/xwidgets/xgroupboxes.cpp src/xobjects/mainobject.cpp
    src/launcher/launcherwindow.cpp src/utilities/statusbar.cpp src/utilities/utilities.cpp
    src/utilities/messagebox.cpp src/airports/importairportsdialog.cpp src/airports/airportsdata.cpp
    src/aircraft/aircraftdata.cpp src/panes/viewlogwidget.cpp src/utilities/zlib/uncompr.c
    src/utilities/zlib/trees.c src/utilities/zlib/inftrees.c src/utilities/zlib/inflate.c
    src/utilities/zlib/inffast.c src/utilities/zlib/infback.c src/utilities/zlib/gzwrite.c
    src/utilities/zlib/gzread.c src/utilities/zlib/gzlib.c src/utilities/zlib/gzclose.c
    src/utilities/zlib/deflate.c src/utilities/zlib/crc32.c src/utilities/zlib/compress.c
    src/utilities/zlib/adler32.c src/utilities/zlib/zutil.c src/utilities/fgx_gzlib.cpp
    src/utilities/helpers.cpp src/xobjects/xprocess.cpp src/props/telnetslave.cpp src/props/propstreewidget.cpp
    src/logs/viewlogswidget.cpp src/xobjects/latlng.cpp src/props/propeditwidget.cpp src/mpmap/mpmapwidget.cpp
    src/mpmap/mpmapxwidget.cpp src/mpmap/pilotswidget.cpp src/mpmap/xwebpage.cpp src/panes/expertoptionswidget.cpp
    src/xobjects/xsettingsmodel.cpp src/xwidgets/fgxdebugwidget.cpp src/launcher/headerwidget.cpp
    src/xwidgets/xcommandpreviewidget.cpp src/xobjects/xopt.cpp src/xwidgets/xdebugtreewidget.cpp
    src/map/openlayerwidget.cpp src/aircraft/xaero.cpp src/airports/metarwidget.cpp src/utilities/fileDialog.cpp
    src/aircraft/aircraftproxymodel.cpp
    src/aircraft/modelinfo.cpp
    src/xwidgets/toolbargroup.cpp
    src/fgtools/fileviewerwidget.cpp
    src/utilities/dirDialog.cpp src/launcher/menuwidget.cpp src/utilities/workThread.cpp
    src/utilities/loadAptDat.cpp src/utilities/simgear/SGGeodesy.cpp )

set( fgx_HDRS src/xobjects/xsettings.h src/settings/settingsdialog.h src/network/networkwidget.h
    src/network/mptelnet.h src/aircraft/aircraftwidget.h src/airports/airportswidget.h
    src/xwidgets/execontrols.h src/panes/timeweatherwidget.h src/panes/renderingwidget.h
    src/panes/coresettingswidget.h src/xwidgets/xgroupboxes.h src/xobjects/mainobject.h
    src/launcher/launcherwindow.h src/utilities/statusbar.h src/utilities/messagebox.h
    src/airports/importairportsdialog.h src/panes/viewlogwidget.h src/xobjects/xprocess.h
    src/props/telnetslave.h src/props/propstreewidget.h src/logs/viewlogswidget.h src/props/propeditwidget.h
    src/mpmap/mpmapwidget.h src/mpmap/mpmapxwidget.h src/mpmap/pilotswidget.h src/mpmap/xwebpage.h
    src/panes/expertoptionswidget.h src/xobjects/xsettingsmodel.h src/xwidgets/fgxdebugwidget.h
    src/launcher/headerwidget.h src/xwidgets/xcommandpreviewidget.h src/xwidgets/xdebugtreewidget.h
    src/aircraft/aircraftproxymodel.h
    src/aircraft/modelinfo.h
    src/xwidgets/toolbargroup.h
    src/fgtools/fileviewerwidget.h
    src/map/openlayerwidget.h src/airports/metarwidget.h src/utilities/fileDialog.h src/utilities/dirDialog.h
    src/launcher/menuwidget.h src/utilities/workThread.h src/utilities/loadAptDat.h )

set( fgx_OTHERS src/xwidgets/xtreewidgetitem.h src/utilities/utilities.h src/airports/airportsdata.h
    src/aircraft/aircraftdata.h src/utilities/zlib/inftrees.h src/utilities/zlib/inflate.h
    src/utilities/zlib/inffixed.h src/utilities/zlib/inffast.h src/utilities/zlib/gzguts.h
    src/utilities/zlib/fgx_zutil.h src/utilities/zlib/fgx_zlib.h src/utilities/zlib/fgx_zconf.h
    src/utilities/zlib/deflate.h src/utilities/zlib/crc32.h src/utilities/zlib/trees.h
    src/utilities/fgx_gzlib.h src/utilities/helpers.h src/xobjects/latlng.h src/xobjects/xopt.h
    src/aircraft/xaero.h src/app_config.h src/utilities/simgear/SGGeodesy.h src/utilities/simgear/constants.h
    src/utilities/simgear/compiler.h )

set( fgx_RCS src/resources/ycons.qrc src/resources/artwork.qrc src/resources/fonts.qrc src/resources/openlayers.qrc
    src/resources/default.qrc src/resources/images.qrc )


include_directories( src/utilities/zlib src/xwidgets src/logs src/aircraft src/launcher src/airports src/panes
    src/map src src/xobjects src/utilities/simgear src/props src/network src/resources
    src/utilities src/settings src/mpmap
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${QT_INCLUDE_DIR}
 )

# Added for DEBUG only
get_property(inc_dirs DIRECTORY PROPERTY INCLUDE_DIRECTORIES)
message(STATUS "*** inc_dirs = ${inc_dirs}")

QT4_WRAP_CPP( fgx_HDRS_MOC ${fgx_HDRS} )
QT4_ADD_RESOURCES( fgx_RESOURCES_RCC ${fgx_RCS} )

add_executable( fgx ${fgx_SRCS} ${fgx_HDRS_MOC} ${fgx_RESOURCES_RCC} ${fgx_OTHERS} )

target_link_libraries( fgx ${QT_LIBRARIES} )

# deal with install
set_target_properties( fgx PROPERTIES DEBUG_POSTFIX d )
install(TARGETS fgx DESTINATION bin )

# eof - generated by Qt2cmake.pl, on 2013/11/12 18:46:29



##=====================================================
## === Debian - pete checking things out !
set(CPACK_GENERATOR "DEB")
set(CPACK_PACKAGE_VENDOR "FGx Team")

set(CPACK_PACKAGE_VERSION ${FGX_VERSION})

## This need to be realite to "project root" ??


#set(CPACK_PACKAGE_VERSION_MAJOR "2")
#set(CPACK_PACKAGE_VERSION_MINOR "15")
#set(CPACK_PACKAGE_VERSION_PATCH "1")

set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "FGx FlightGear launcher")
set(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_SOURCE_DIR}/etc/dist_description.txt")
#set(CPACK_PACKAGE_DESCRIPTION "FGx - A cross-platform FlightGear launcherXXX")
#'set(CPACK_DEBIAN_PACKAGE_DESCRIPTION "FGx - FlightGear LauncherDEV")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_SOURCE_DIR}/LICENSE.txt")


set(CPACK_PACKAGE_CONTACT "fgx@freeflightsim.org")
set(CPACK_DEBIAN_PACKAGE_MAINTAINER "fgx@freeflightsim.org")
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "http://fgx.freeflightsim.org")
set(CPACK_DEBIAN_PACKAGE_DEPENDS "libqt4-xml,libqt4-network,libqt4-gui,libqt4-webkit")
set(CPACK_DEBIAN_PACKAGE_SECTION "Games")

install(FILES "${CMAKE_SOURCE_DIR}/src/resources/fgx_48x48x32.png"
        DESTINATION "/usr/share/pixmaps"
)

install(FILES "${CMAKE_SOURCE_DIR}/etc/fgx.desktop"
        DESTINATION "/usr/share/applications"
)
#set(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_SOURCE_DIR}/Debian/postinst")


INCLUDE(CPack)
